@using PuzzleLab.Web.Models
@using System.ComponentModel.DataAnnotations
@using PuzzleLab.Shared.DTOs.QuestionPackage
@using PuzzleLab.Shared.DTOs.QuestionPackage.Requests

<div class="@(_isVisible ? "fixed inset-0 bg-black/80 flex items-center justify-center z-50" : "hidden")">
    <div class="bg-white rounded-lg p-6 w-full max-w-md shadow-xl">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-bold">Add Question Package</h2>
            <button @onclick="OnClose" class="text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                     stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                </svg>
            </button>
        </div>

        <EditForm Model="@PackageModel" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator/>

            <div class="space-y-4">
                <div>
                    <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Name</label>
                    <InputText id="name"
                               @bind-Value="PackageModel.Name"
                               class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-900 focus:border-gray-900"/>
                    <ValidationMessage For="@(() => PackageModel.Name)" class="text-sm text-red-600"/>
                </div>

                <div>
                    <label for="description" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                    <InputTextArea id="description"
                                   @bind-Value="PackageModel.Description"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-900 focus:border-gray-900"
                                   rows="4"/>
                    <ValidationMessage For="@(() => PackageModel.Description)" class="text-sm text-red-600"/>
                </div>
            </div>

            <div class="mt-6 flex justify-end space-x-3">
                <button type="button"
                        @onclick="OnClose"
                        class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900">
                    Cancel
                </button>
                <button type="submit"
                        disabled="@IsSubmitting"
                        class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gray-900 hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 disabled:opacity-50 disabled:cursor-not-allowed">
                    @if (IsSubmitting)
                    {
                        <span
                            class="inline-block w-4 h-4 mr-2 border-2 border-white border-t-transparent rounded-full animate-spin"></span>
                        <span>Saving...</span>
                    }
                    else
                    {
                        <span>Save</span>
                    }
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public bool IsSubmitting { get; set; }
    [Parameter] public CreateQuestionPackageRequest PackageModel { get; set; } = new();
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback<CreateQuestionPackageRequest> OnSubmit { get; set; }

    private bool _isVisible => IsVisible;

    private async Task HandleSubmit()
    {
        await OnSubmit.InvokeAsync(PackageModel);
    }

}
