@using PuzzleLab.Web.Services.Time
@inject IServerTimeService ServerTimeService
@implements IDisposable

<span class="server-time-clock-signalr">@_displayTime</span>

@code {

    private string _displayTime = "Connecting...";
    private readonly TimeSpan _targetOffset = TimeSpan.FromHours(7); // GMT+7

    protected override void OnInitialized()
    {
        ServerTimeService.TimeUpdated += HandleTimeUpdated;

        UpdateTimeDisplay();
        base.OnInitialized();
    }

    private void HandleTimeUpdated()
    {
        UpdateTimeDisplay();
        InvokeAsync(StateHasChanged);
    }

    private void UpdateTimeDisplay()
    {
        if (ServerTimeService.CurrentServerTimeUtc.HasValue)
        {
            var serverTimeUtc = ServerTimeService.CurrentServerTimeUtc.Value;
            var targetTime = serverTimeUtc.ToOffset(_targetOffset);
            _displayTime = targetTime.ToString("HH:mm:ss");
        }
        else
        {
            _displayTime = "Connecting...";
        }
    }

    public void Dispose()
    {
        ServerTimeService.TimeUpdated -= HandleTimeUpdated;
        GC.SuppressFinalize(this);
    }

}
